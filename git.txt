博文地址： https://blog.csdn.net/youzhouliu/article/details/78952453
https://www.cnblogs.com/wupeiqi/p/7295372.html
Git详细使用教程：
1.Git是什么：Git是目前世界上最先进的分布式版本控制系统

2.SVN和Git最主要的区别是
   SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器那里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器，集中式版本控制系统必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，网速较慢的话，就相当难受了。
   Git是分布式版本控制系统，那么就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自 己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢，比如说自己在电脑上修改了文件A，其他人也在电脑上修改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。
   注意：要明确的是，所有的版本控制系统只能跟踪文本文件的改动，比如txt文件，网页，所有程序的代码等，Git也不例外，版本控制系统可以告诉你每次的改动，但是图片，视频这些二进制文件，虽然也能由版本控制系统管理，但也没法跟踪文件的变化，只能吧二进制文件每次改动串起来，也就是知道图片从1K变成了2K，但是到底改了啥，版本控制也不知道。

3.在windows上安装Git
   在网上下载Git后安装，打开Git Bash
   因为Git是分布式版本控制系统，所以需要填写用户名和邮箱作为一个标识
   进行设置： git config --global user.name "zyyquanquan"
             git config --global user.email "zyyquanquan@outlook.com"
   因为Git是分布式版本控制系统，所以需要填写用户名和邮箱作为一个标识
   --global参数，有了这个参数，标识你在这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱

4.操作Git
  (1).创建版本库
    版本库又名仓库，英文名为repository，可以理解为一个目录，这个目录里面所有的文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时候都可以追踪历史，或者在将来某个时刻还可以将文件还原
    进入磁盘目录： cd D:
    创建仓库文件： mkdir testgit
    显示当前工作目录： pwd
    显示当前目录： ll
    将目录变成Git可以管理的仓库： git init   (会生成一个.git目录，作用是跟踪管理版本)
    创建文件：touch remade.txt
    修改文件：vi remade.txt 修改内容使用按键a，输入内容，按ESC键，shift+zz保存退出
    添加到暂存区： git add remade.txt
    把文件提交到仓库： git commit -m "remade.txt的提交"
    查看某一个文件到底修改了如何内容： git diff remade.txt
    查看文件修改记录： git log
    查看文件修改记录简易版： git log --pretty=oneline
    回退到上一个版本： git reset --hard HEAD^
    回退到前100个版本： git reset --hard HEAD~100
    获取版本号： git reflog
    通过版本号恢复内容: git reset --hard 版本号
    路径中存在/符号的转义： git config --global core.autocrlf false
    工作区做的修改全部撤销： git checkout -- remade.txt
    删除文件： rm a.txt
    恢复删除文件： git checkout -- a.txt

  (2)工作区与暂存区的区别
   工作区：就是在电脑上看到的目录，.git隐藏目录版本库除外，或者以后需要在新建的目录文件等等都属于工作区范畴。
   版本库(Repository)：工作区有一个隐藏目录.git，这个不属于工作区，这是版本库。版本库里面存了很多东西，其中最重要的就是stage(暂存区)，还有Git为我们自动创建的第一个分支master,以及指向master的一个指针HEAD。
  Git提交文件到版本库有两步：
    1.是使用git add把文件添加进去，实际上就是把文件添加到暂存区
    2.使用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支上

  (4)Git撤销修改和删除文件操作
  修改:
    第一种：直接手动修改，然后git add添加到暂存区，然后使用git commit提交
    第二种：使用git reset --hard HEAD^回退到上一个版本
    第三种：使用git checkout -- remade.txt  工作区做的修改全部撤销。
      第一种情况：remade.txt修改后，还没有放到暂存区，使用撤销就回到和版本库一模一样的情况
      第二种情况：remade.txt已经放入了暂存区，接着又做了修改，撤销修改就回到添加暂存区后的状态
  删除：
    删除文件： rm a.txt
    恢复删除文件： git checkout -- a.txt

5.远程仓库
  Git仓库和Github仓库之间的传输是通过SSH加密
  (一).创建SSH Key。在用户的主目录下，看看有没有.SSH目录，在看这个目录下有没有id_rsa和id_rsa.pub，如果有的话直接跳过如下命令，如果没有的话，打开命令行，输入如下命令
      ssh-keygen -t rsa -C "zyyquanquan@outlook.com"
  id_rsa是私钥，不能泄露，id_rsa.pub是公匙。
  (二)将新仓库与已有的本地仓库与之关联，将本地仓库的内容推送到Github仓库
  git remote add origin https://github.com/zyyquanquan/wwwtest.git
  git push -u origin master   将本地内容推送到远程仓库
  由于远程仓库是空的，我们第一次推送master分支时，加上了-u参数，Git不但把本地的master分支推送到远程新的master分支，还会把本地master分支和远程的master分支关联起来，在以后的推送或者抓取时就可以简化命令。
  从现在起，只要本地做了提交，就可以通过如下命令：
     git push origin master
  把本地master分支的最新修改推送到github上，这样就可以拥有真正的分布式版本库了。
  (三)远程库克隆
  先创建仓库，记得勾选Initialize this repository with a README按钮。
  使用命令
  git clone https://github.com/zyyquanquan/wwwtest2 克隆出一个本地库即可

6.创建与合并分支
  在版本回退里，每次提交，Git都把他们串成一条时间线，这条时间线就是一个分支，截止到目前，只有一条时间线，在Git里，这条分支叫做主分支，即master分支。HEAD严格来说不是指向提交，而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支
  创建dev分支： git branch name
  切换到dev分支： git checkout name
  创建并切换分支： git checkout -b name
  查看分支： git branch   (当前分支前面会添加一个分号)
  合并某分支到当前分支： git merge name   (注意：会出现Fast-forward信息，Git告诉我们这次合并是快进模式)
  删除分支： git branch -d name
  (一).分支管理策略
    通常合并分支时，Git一般使用“Fast forward”模式，在这种模式下删除分支会丢失掉分支信息，使用带参数-no-ff来禁用该模式
    合并命令为： git merge --no-ff -m "merge with --no-ff" dev
  (二).bug分支
    将当前工作现场隐藏起来： git stash
    查看工作现场： git stash list
    将工作现场恢复：
      1.git stash apply恢复，恢复后，stash的内容并不删除，需要使用命令git stash drop进行删除
      2.使用git stash pop，恢复的同时把stash也删除了
  (三).多人协作
    当你从远程库克隆的时候，实际上git自动把本地的master分支与远程的master分支对应起来了，并且远程库的对应名称为origin
    1.查看远程库的信息 git remote
    2.查看远程库的相信信息 git remote -v
    一.推送分支：推送分支就是把该分支上所有本地提交到远程库中，推送时，要指定本地分支
       推送分支命令：git push origin master
       1.master是主分支，要时刻与远程同步
       2.一些修复bug的分支不需要推送到远程去，可以先合并到主分支，然后把主分支master推送到远程去即可
